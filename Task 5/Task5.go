package main

import (
	"fmt"
	"os"
	"time"
)

func main() {
	//Переменная, в которой будем хранить количество секунд
	var N int

	//Выводим приглашение к вводу времени в секундах
	fmt.Println("Введите количество секунд (N):")

	//Считываем значение времени с клавиатуры
	_, err := fmt.Scan(&N)
	if err != nil {
		fmt.Println("Ошибка при вводе времени:", err)
		return
	}

	//Создаем канал для передачи данных
	dataChan := make(chan int)

	//Анонимная горутина для отправки значений в канал
	go func() {
		//Завершаем канал при выходе из горутины
		defer close(dataChan)
		//Бесконечный цикл, отправляющий последовательные числа в канал
		for i := 1; ; i++ {
			dataChan <- i
			//Задержка на одну секунду для наглядности
			time.Sleep(time.Second)
		}
	}()

	//Анонимная горутина для чтения значений из канала
	go func() {
		//Бесконечный цикл чтения из канала
		for {
			select {
			case data, ok := <-dataChan:
				if !ok {
					//Если канал закрыт, завершаем чтение
					fmt.Println("Канал закрыт. Завершаем чтение.")
					return
				}
				fmt.Printf("Принято значение из канала: %d\n", data)
			}
		}
	}()

	//Ожидание N секунд
	time.Sleep(time.Duration(N) * time.Second)

	// Завершение программы
	fmt.Println("Программа завершена.")
	os.Exit(0)
}
